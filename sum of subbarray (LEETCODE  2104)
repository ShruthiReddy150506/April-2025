def sum_subarr(nums):
    n=len(nums)
    left=[0]*n
    right=[0]*n
    stack=[]
    for i in range(0,n):
        count=1
        while len(stack)>0 and stack[-1][0]>nums[i]:
            count+=stack.pop()[1]
        left[i]=count
        stack.append((nums[i],count))
    stack1=[]
    for i in range(n-1,-1,-1):
        count=1
        while len(stack1)>0 and stack1[-1][0]>=nums[i]:
            count+=stack1.pop()[1]
        right[i]=count
        stack1.append((nums[i],count))
    temp=0
    for i in range(0,n):
        temp+=nums[i]*left[i]*right[i]
    left1=[0]*n
    right1=[0]*n
    st=[]
    for i in range(0,n):
        count=1
        while len(st)>0 and st[-1][0]<nums[i]:
            count+=st.pop()[1]
        left1[i]=count
        st.append((nums[i],count))
    st1=[]
    for i in range(n-1,-1,-1):
        count=1
        while len(st1)>0 and st1[-1][0]<=nums[i]:
            count+=st1.pop()[1]
        right1[i]=count
        st1.append((nums[i],count))
    flag=0
    for i in range(n):
        flag+=nums[i]*left1[i]*right1[i]
    return flag-temp

nums=list(map(int,input("enter:").split()))
print(sum_subarr(nums))
